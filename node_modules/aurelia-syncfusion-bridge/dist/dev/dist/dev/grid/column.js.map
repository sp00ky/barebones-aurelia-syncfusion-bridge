{"version":3,"sources":["grid/column.js"],"names":["constants","generateBindables","inlineView","customElement","children","Util","Column","aureliaTemplateString","elementPrefix","setTemplates","template","util","getBindablePropertyName"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAQA,e,oBAAAA,S;;AACAC,uB,qBAAAA,iB;;AACAC,gB,iBAAAA,U;AAAYC,mB,iBAAAA,a;AAAeC,c,iBAAAA,Q;;AAC3BC,U,eAAAA,I;;;wBAMKC,M,WAJZJ,gBAAcF,UAAUO,qBAAxB,C,UACAJ,cAAiBH,UAAUQ,aAA3B,Y,UACAP,kBAAkB,SAAlB,EAA6B,CAAC,UAAD,EAAa,cAAb,EAA6B,gBAA7B,EAA+C,eAA/C,EAAgE,cAAhE,EAAgF,eAAhF,EAAiG,UAAjG,EAA6G,UAA7G,EAAyH,kBAAzH,EAA6I,YAA7I,EAA2J,cAA3J,EAA2K,mBAA3K,EAAgM,mBAAhM,EAAqN,YAArN,EAAmO,cAAnO,EAAmP,UAAnP,EAA+P,qBAA/P,EAAsR,OAAtR,EAA+R,mBAA/R,EAAoT,iBAApT,EAAuU,iBAAvU,EAA0V,QAA1V,EAAoW,kBAApW,EAAwX,YAAxX,EAAsY,iBAAtY,EAAyZ,UAAzZ,EAAqa,YAAra,EAAmb,cAAnb,EAAmc,UAAnc,EAA+c,qBAA/c,EAAse,UAAte,EAAkf,WAAlf,EAA+f,SAA/f,EAA0gB,MAA1gB,EAAkhB,iBAAlhB,EAAqiB,SAAriB,EAAgjB,OAAhjB,CAA7B,C,UAGEG,SAAYJ,UAAUQ,aAAtB,c;;;;;;;yBACDC,Y,2BAAe;AACb,cAAI,KAAKC,QAAL,CAAc,CAAd,CAAJ,EAAsB;AACpB,gBAAIC,OAAO,IAAIN,IAAJ,EAAX;AACA,iBAAKM,KAAKC,uBAAL,CAA6B,UAA7B,CAAL,IAAiD,KAAKF,QAAL,CAAc,CAAd,EAAiBA,QAAlE;AACD;AACF,S;;;;;;iBAN0D,E","file":"../../../grid/column.js","sourcesContent":["import {constants} from '../common/constants';\r\nimport {generateBindables} from '../common/decorators';\r\nimport {inlineView, customElement, children} from '../common/common';\r\nimport {Util} from '../common/util';\r\n\r\n@inlineView(`${constants.aureliaTemplateString}`)\r\n@customElement(`${constants.elementPrefix}column`)\r\n@generateBindables('columns', ['clipMode', 'allowEditing', 'allowFiltering', 'allowGrouping', 'allowSorting', 'allowResizing', 'commands', 'cssClass', 'customAttributes', 'dataSource', 'defaultValue', 'disableHtmlEncode', 'displayAsCheckBox', 'editParams', 'editTemplate', 'editType', 'enableGroupByFormat', 'field', 'filterBarTemplate', 'foreignKeyField', 'foreignKeyValue', 'format', 'headerTemplateID', 'headerText', 'headerTextAlign', 'isFrozen', 'isIdentity', 'isPrimaryKey', 'priority', 'showInColumnChooser', 'template', 'textAlign', 'tooltip', 'type', 'validationRules', 'visible', 'width'])\r\n\r\nexport class Column {\r\n  @children(`${constants.elementPrefix}template`) template = [];\r\n  setTemplates() {\r\n    if (this.template[0]) {\r\n      let util = new Util();\r\n      this[util.getBindablePropertyName('template')] = this.template[0].template;\r\n    }\r\n  }\r\n}\r\n\r\n"]}