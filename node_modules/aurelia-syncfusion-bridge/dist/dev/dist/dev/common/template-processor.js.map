{"version":3,"sources":["common/template-processor.js"],"names":["inject","Util","TemplatingEngine","TemplateProcessor","context","templateEngine","templatingEngine","util","initTemplate","proxy","ej","template","render","self","selector","data","index","renderStringTemplate","initWidgetDependancies","widget","aureliaTemplate","compileTemplate","element","on","pluginName","templateProcessor","templateObject","key","getGuid","itemData","views","scope","hasValue","actElement","$","html","tempElement","templates","find","tmplElement","filter","length","i","dataIndex","parseInt","attr","view","enhance","bind","unbindViews","clearTempalte","Object","keys","t","obj","unbind"],"mappings":"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","file":"../../../common/template-processor.js","sourcesContent":["import {inject} from 'aurelia-dependency-injection';\r\nimport {Util} from '../common/util';\r\nimport {TemplatingEngine} from 'aurelia-templating';\r\n@inject(TemplatingEngine, Util)\r\nexport class TemplateProcessor {\r\n\r\n  constructor(context, templateEngine) {\r\n    this.context = context;\r\n    this.templatingEngine = templateEngine;\r\n    this.util = new Util();\r\n  }\r\n\r\n  initTemplate() {\r\n    let proxy = this;\r\n    ej.template.render = function(self, selector, data, index) {\r\n      return proxy.renderStringTemplate(self, selector, data, index);\r\n    };\r\n  }\r\n\r\n  initWidgetDependancies() {\r\n    if ( this.context.widget.aureliaTemplate) {\r\n      this.compileTemplate(this.context.widget.element);\r\n    }\r\n    let proxy =  this.context;\r\n    let element =  this.context.widget.element;\r\n    element.on( this.context.widget.pluginName + 'refresh', function() {\r\n      if (proxy.widget.aureliaTemplate) {\r\n        proxy.templateProcessor.compileTemplate(element);\r\n      }\r\n    });\r\n  }\r\n\r\n  renderStringTemplate(self, selector, data, index) {\r\n    let templateObject = self.aureliaTemplate;\r\n    if (!templateObject || !templateObject[selector]) {\r\n      templateObject = templateObject || {};\r\n      templateObject[selector] = { key: ej.getGuid('aurtmpl'), itemData: [], views: [] };\r\n      self.aureliaTemplate = templateObject;\r\n    }\r\n    let scope = templateObject[selector];\r\n    if (this.util.hasValue(index)) {\r\n      scope.itemData[index] = data;\r\n    } else {\r\n      scope.itemData = [data];\r\n    }\r\n    let actElement = $(selector).html();\r\n    let tempElement = \"<div ej-prop='\" + index + \"' class='\" + templateObject[selector].key + \" ej-aurelia-template'>\" + actElement + '</div>';\r\n    return tempElement;\r\n  }\r\n\r\n  compileTemplate(element) {\r\n    let templates = $(element).find('.ej-aurelia-template');\r\n    let templateObject =  this.context.widget.aureliaTemplate;\r\n    for (let template in templateObject) {\r\n      let tmplElement = templates.filter('.' + templateObject[template].key);\r\n      if (tmplElement.length) {\r\n        for (let i = 0; i < tmplElement.length; i++) {\r\n          let dataIndex = parseInt($(tmplElement[i]).attr('ej-prop'));// eslint-disable-line radix\r\n          let view = this.templatingEngine.enhance(tmplElement[i]);\r\n          view.bind(templateObject[template].itemData[dataIndex]);\r\n          templateObject[template].views[dataIndex] = view;\r\n        }\r\n      } else {\r\n        this.unbindViews(templateObject[template]);\r\n        delete templateObject[template];\r\n      }\r\n    }\r\n  }\r\n\r\n  clearTempalte() {\r\n    let templateObject =  this.context.widget.aureliaTemplate;\r\n    if (templateObject && Object.keys(templateObject).length) {\r\n      for (let t in templateObject) {\r\n        this.unbindViews(templateObject[t]);\r\n        delete templateObject[t];\r\n      }\r\n    }\r\n  }\r\n\r\n  unbindViews(obj) {\r\n    for (let i = 0; i < obj.views.length; i++) {\r\n      let view = obj.views[i];\r\n      view.unbind();\r\n    }\r\n  }\r\n\r\n}\r\n"]}